classdef ConfigurationManager
    %CONFIGURATIONMANAGER Summary of this class goes here
    %   Detailed explanation goes here
    
    properties
       AppSettings;
       ConnectionStrings;
    end
    
    methods
        % constructors.
        function obj = ConfigurationManager()
            obj = ConfigurationManager(fullfile(pwd
        end
        function obj = ConfigurationManager(filename)
            
            if exist(filename, 'file')                
                try
                    % read xml configuration file.
                    xDoc = xmlread(filename);
                    
                    % read app settings
                    appSettingsNode = xDoc.getElementsByTagName('appSettings');
                    if ~isempty(appSettingsNode)
                        obj.AppSettings = obj.ReadAppSettings(appSettingsNode.item(0));
                    end
                    
                    %read connection strings.
                    connectionStringsNode = xDoc.getElementsByTagName('connectionStrings');
                    if ~isempty(connectionStringsNode)
                        obj.ConnectionStrings = obj.ReadDbSettings(connectionStringsNode.item(0));
                    end      
                    
                catch ex
                    disp('Failed to initialise ConfigurationManager.');
                    rethrow(ex);
                end
            else
                me = MException('ConfigurationManager', ['The configuration file not found. FileName-' filename]);
                throw(me);
            end
        end                
    end
    
    methods(Access=private)
        % read app setting elements from the given node.
        function settings = ReadAppSettings(obj, node)
            settings = containers.Map('KeyType', 'char', 'ValueType', 'char');
            settingNodeList = node.getElementsByTagName('setting');
            if ~isempty(settingNodeList)                
                for i = 0:settingNodeList.getLength() - 1
                    settings(char(settingNodeList.item(i).getAttributes().getNamedItem('key').getNodeValue())) = ...
                        char(settingNodeList.item(i).getAttributes().getNamedItem('value').getNodeValue());
                end                            
            end
        end  
        
        % read app setting elements from the given node.
        function settings = ReadDbSettings(obj, node)
            import prursg.Configuration.*;
            
            settings = containers.Map('KeyType', 'char', 'ValueType', 'any');
            settingNodeList = node.getElementsByTagName('dbSetting');
            if ~isempty(settingNodeList)                
                for i = 0:settingNodeList.getLength() - 1
                    dbSetting = DbSetting();
                    dbSetting.DatabaseName = char(settingNodeList.item(i).getAttributes().getNamedItem('databaseName').getNodeValue());
                    dbSetting.UserName = char(settingNodeList.item(i).getAttributes().getNamedItem('userName').getNodeValue());
                    dbSetting.Password = char(settingNodeList.item(i).getAttributes().getNamedItem('password').getNodeValue());
                    dbSetting.Url = char(settingNodeList.item(i).getAttributes().getNamedItem('url').getNodeValue());
                    settings(char(settingNodeList.item(i).getAttributes().getNamedItem('key').getNodeValue())) = ...
                        dbSetting;
                end                            
            end
        end                
        
    end
    
end

