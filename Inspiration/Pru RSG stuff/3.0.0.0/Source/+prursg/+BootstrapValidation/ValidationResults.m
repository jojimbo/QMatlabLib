%% Bootstrap Validation - ValidationResults
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% *Description*
%
% The ValidationResults class will hold the bootstrap validation results
% generated by the validation algorithm
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%
%MATLAB CODE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
classdef ValidationResults < handle
%% How to Use the Class
%
% This class contains a single method, |[AddResults]|, which takes as
% input parameters the following:
%
%   - type, string which specifies what type the validation result datum
%   is. The type can take the following values:
%       - 'string', the validation result datum will represent free-text
%       - 'double', the validation result datum will represent a single
%       numeric value with decimal precision
%       - 'image', the validation result datum will represent the filename
%       of the image file
%       - 'table', the validation result datum will represent tabular data
%
%   - identifier, string which specifies the identifier for the validation
%   result datum
%
%   - value, the value of the validation result datum. Th value can be one
%   of the following types:
%       - string, this validation result datum will be expected when the
%       |[type]| argument is set to 'string' or 'image'
%       - double, this validation result datum will be expected when the
%       |[type]| argument is set to 'double'
%       - cell array, this validation result datum will be expected when 
%       the |[type]| argument is set to 'table'
%

%% Properties
% These is a single property defined for the ValidationResults class,
% which is the following:
% 
% *|[resultsMap]|* - an instance of the Map class provided by Matlab. It
% will hold all the validation results data. The key for each entry will be
% the identifier input parameter which will need to be unique each time.
% The value of an entry will be another map which contain only a single
% key/value pair holding the type (key) and the value (string, double or
% cell array)
%
%
%MATLAB CODE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
    
    properties
        % Instance of Map to hold all the validation results
        resultsMap
        customPropertiesMap
        validTypesForValidationResults
        validTypesForCustomProperties
    end
    
    methods
        function obj = ValidationResults()
            import prursg.*;
            obj.resultsMap = containers.Map('KeyType', 'char', 'ValueType', 'any'); 
            obj.customPropertiesMap = containers.Map('KeyType', 'char', 'ValueType', 'any'); 
            a = prursg.BootstrapValidation.TypeValidation.ValidationResult;
            obj.validTypesForValidationResults = a.type;
            b = prursg.BootstrapValidation.TypeValidation.CustomProperty;
            obj.validTypesForCustomProperties = b.type;
        end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        
%% Details of Methods
% _________________________________________________________________________
%
%% |[AddResults(obj, type, identifier, value)]|
%
% '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
%
% *_Description_*
%
% This function is responsible for populating the resultsMap variable with
% the validation results. Each call to this function will be adding a
% single validation result datum in the resultsMap. Certain checks need to
% be made in order to make sure that the input parameters are passed in the
% function.
%
% *_Inputs_*
%
% |[type]| - A string which specifies what type the validation result datum
%   is. The type can take the following values:
%       - 'string', the validation result datum will represent free-text
%       - 'double', the validation result datum will represent a single
%       numeric value with decimal precision
%       - 'image', the validation result datum will represent the filename
%       of the image file
%       - 'table', the validation result datum will represent tabular data
% 
% _Data Type_: string
%
% |[identifier]| - A string which specifies the identifier for the validation
%   result datum
% 
% _Data Type_: string
%
% |[value]| - The value of the validation result datum. 
% 
% _Data Type_: any
% 
% *_Outputs_*
%
% -
%
        
%MATLAB CODE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        
        function AddResults(obj, type, identifier, value)
            
            obj.validateInputParameters(type, identifier, value);
            
            obj.validateType(type, 'vr');
            
            obj.validateValues(type, value);
            
            typeValueMap = containers.Map('KeyType', 'char', 'ValueType', 'any'); 
            typeValueMap(lower(type)) = value;
            
            obj.checkDuplicateIdentifiers(identifier);
            
            obj.resultsMap(identifier) = typeValueMap;
            
        end
        
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        
%% Details of Methods
% _________________________________________________________________________
%
%% |[AddCustomProperty(obj, type, identifier, value)]|
%
% '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
%
% *_Description_*
%
% This function is responsible for populating the customPropertiesMap variable
% with the validation results. Each call to this function will be adding a
% single custom property in the resultsMap. Certain checks need to
% be made in order to make sure that the input parameters are passed in the
% function.
%
% *_Inputs_*
%
% |[type]| - A string which specifies what type the validation result datum
%   is. The type can take the following values:
%       - 'string', it will represent free-text
%       - 'double', it will represent a single
%       numeric value with decimal precision
%       - 'date', it will represent a date value having format dd/mmm/yyyy
%       of the image file
% 
% _Data Type_: string
%
% |[identifier]| - A string which specifies the identifier for the validation
%   result datum
% 
% _Data Type_: string
%
% |[value]| - The value of the custom property. 
% 
% _Data Type_: any
% 
% *_Outputs_*
%
% -
%
        
%MATLAB CODE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
        
        function AddCustomProperty(obj, type, identifier, value)
            
            obj.validateInputParameters(type, identifier, value);
            
            obj.validateType(type, 'cp');
            
            obj.validateValues(type, value);
            
            typeValueMap = containers.Map('KeyType', 'char', 'ValueType', 'any'); 
            typeValueMap(lower(type)) = value;
            
            obj.checkDuplicateIdentifiers(identifier);
            
            obj.customPropertiesMap(identifier) = typeValueMap;
            
        end
    end
    
    methods(Access=private) 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        
%% Details of Methods
% _________________________________________________________________________
%
%% |[validateInputParameters(obj, type, identifier, value)]|
%
% '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
%
% *_Description_*
%
% This function is responsible for checking that all parameters passed to
% populate either a validation result datum or a custom property are
% populated.
%
% *_Inputs_*
%
% |[type]| - A string which specifies the type for the validation result
% datum or the custom property
% 
% _Data Type_: string
%
% |[identifier]| - A string which specifies the identifier for the validation
%   result datum or the custom property
% 
% _Data Type_: string
%
% |[value]| - The value of the validation result datum or the custom property. 
% 
% _Data Type_: any
% 
% *_Outputs_*
%
% -
%
        
%MATLAB CODE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

        function validateInputParameters(obj, type, identifier, value)
            if (isempty(type))
                ex = MException('ValidationResults:AddResults:EmptyType',...
                    'ValidationResults:AddResults:EmptyType: You have not provided a type for this validation result');                
                throw(ex); 
            end
            
            if (isempty(identifier))
                ex = MException('ValidationResults:AddResults:EmptyIdentifier',...
                    'ValidationResults:AddResults:EmptyIdentifier: You have not provided an identifier for this validation result');                
                throw(ex); 
            end
            
            if (isempty(value))
                ex = MException('ValidationResults:AddResults:EmptyValue',...
                    'ValidationResults:AddResults:EmptyValue: You have not provided a value for this validation result');                
                throw(ex); 
            end
        end
      
        function validateValues(obj, type, value)
            
            switch type
                case 'string'
                    if (~ischar(value))
                        ex = MException('ValidationResults:validateInputParameters:InvalidValueForString',...
                            ['ValidationResults:validateInputParameters:InvalidValueForString: The value you provided is of type ''' class(value) ''' and does not match the type ' type ' supplied.']);                
                        throw(ex); 
                    end
                case 'double'
                    if (~isnumeric(value))
                        ex = MException('ValidationResults:validateInputParameters:InvalidValueForDouble',...
                            ['ValidationResults:validateInputParameters:InvalidValueForDouble: The value you provided is of type ''' class(value) ''' and does not match the type ' type ' supplied.']);                
                        throw(ex); 
                    end
                case 'image'
                    if (~ischar(value))
                        ex = MException('ValidationResults:validateInputParameters:InvalidValueForImage',...
                            ['ValidationResults:validateInputParameters:InvalidValueForImage: The value you provided is of type ''' class(value) ''' and does not match the type ' type ' supplied. Image types need to have string values.']);                
                        throw(ex); 
                    end
                case 'table'
                    if (~iscell(value))
                        ex = MException('ValidationResults:validateInputParameters:InvalidValueForTable',...
                            ['ValidationResults:validateInputParameters:InvalidValueForTable: The value you provided is of type ''' class(value) ''' and does not match the type ' type ' supplied. Table types need to have cell array values.']);                
                        throw(ex); 
                    end
                case 'date'
                    try
                        tempDate = datenum(value, 'dd/mmm/yyyy');
                    catch e
                        ex = MException('ValidationResults:validateInputParameters:InvalidValueForDate',...
                            ['ValidationResults:validateInputParameters:InvalidValueForDate: The value you provided does not conform to the date format required (dd/mmm/yyyy).']);                
                        throw(ex); 
                    end
            end
            
        end
        
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        
%% Details of Methods
% _________________________________________________________________________
%
%% |[validateType(obj, type, item)]|
%
% '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
%
% *_Description_*
%
% This function is responsible for validating the type passed in for either
% a validation resutl datum or a custom property. Enumerations are used to
% validate the type. If a type is invalid, an exception is thrown.
%
% *_Inputs_*
%
% |[type]| - A string which specifies the type for the validation result
% datum or the custom property
% 
% _Data Type_: string
%
% |[item]| - A string which specifies whether the validation is performed
% for a validation result datum or a custom property
% 
% _Data Type_: string
% 
% *_Outputs_*
%
% -
%
        
%MATLAB CODE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        function validateType(obj, type, item)
            
            invalid = 0;
            s = [];
            
            if (strcmp(item, 'vr'))
                if (~ismember(lower(type), lower(obj.validTypesForValidationResults)))
                    invalid = 1;
                    s = obj.validTypesForValidationResults;
                end                
            elseif (strcmp(item, 'cp'))
                if (~ismember(lower(type), lower(obj.validTypesForCustomProperties)))
                    invalid = 1;
                    s = obj.validTypesForCustomProperties;
                end  
            end
            
            if (invalid)
                s(2,:) = {', '};
                s{2,end} = '';
                ex = MException('ValidationResults:validateType:InvalidResultType',...
                    ['ValidationResults:AddResults:InvalidResultType: The type you provided for the validation result is incorrect. The valid types' ...
                    ' for a validation result are the following: ' [s{:}] '.']);                
                throw(ex);
            end
        end
        
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        
%% Details of Methods
% _________________________________________________________________________
%
%% |[checkDuplicateIdentifiers(obj, identifier)]|
%
% '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
%
% *_Description_*
%
% This function is responsible for checking whether an identifier has been
% used more than once to define either a validation result datum or a
% custom property.
%
% *_Inputs_*
%
% |[identifier]| - A string which specifies the identifier of a validation
% result datum or a custom property
% 
% _Data Type_: string
% 
% *_Outputs_*
%
% -
%
        
%MATLAB CODE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        function checkDuplicateIdentifiers(obj, identifier)
            
            if (isKey(obj.resultsMap, identifier) || isKey(obj.customPropertiesMap, identifier))
                ex = MException('ValidationResults:AddCustomProperty:DuplicateIdentifier',...
                ['ValidationResults:AddCustomProperty:DuplicateIdentifier: ' ...
                'The identifier ' identifier ' has been used more than once when setting a validation result datum or a custom property. The next validation report will be processed now (if present).']);
                throw(ex);
            end
            
        end
    end
    
end

